FROM node

ARG DEVELOPMENT

ENV NODE_ENV development

WORKDIR /var/lib

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    build-essential \
    git \
    libevent-dev \
    libffi-dev \
    libfontconfig \
    libpq-dev \
    libssl-dev \
    python-dev \
    python-setuptools \
    python-pip \
    python-virtualenv \
    curl \
    openssl \
    gnupg2

RUN pip install --upgrade pip setuptools

RUN git clone https://github.com/hypothesis/h.git hypothesis

WORKDIR /var/lib/hypothesis

# Use specific version of the software to make sure it works correctly
RUN git checkout 50bc0e93b80329d1b98df1fe7c6e79f19d90a5b1

COPY setup_auth_clients.py .
COPY Makefile_service ./Makefile

# Install build deps, build, and then clean up.
# RUN pip install -r requirements.txt
RUN echo "$DEVELOPMENT"
RUN if [ "$DEVELOPMENT" = "true" ]; then echo "installing python dependencies for development"; else echo "installing python dependencies"; fi
RUN if [ "$DEVELOPMENT" = "true" ]; then pip install -r requirements-dev.in ; else pip install -r requirements.txt; fi

# # Copy collectd config
# COPY conf/collectd.conf /etc/collectd/collectd.conf
# RUN mkdir /etc/collectd/collectd.conf.d

COPY . .

# Expose the default port.
EXPOSE 5000

ENV CLIENT_OAUTH_ID $HYPOTHESIS_CLIENT_ID
ENV CLIENT_URL $HYPOTHESIS_CLIENT_URL

# Set the application environment
ENV PATH /var/lib/hypothesis/bin:$PATH
ENV PYTHONIOENCODING utf_8
ENV PYTHONPATH /var/lib/hypothesis:$PYTHONPATH

# Delete lines in `devserver.py` that would otherwise overwrite our environment variable for websocket_url.
# We provide our own WEBSOCKET_URL in the .env file.
RUN sed -i '/WEBSOCKET_URL/d' ./h/cli/commands/devserver.py

# Start the web server by default
RUN npm install -g gulp-cli
RUN make clean

RUN npm install

ENTRYPOINT ["make", "dev"]
